!function(e,t){"function"==typeof define&&define.amd?define(["underscore"],t):"object"==typeof exports?module.exports=t(require("underscore")):e.Github=t(e._)}(this,function(e){var t={};t.version="0.1.3";var r="https://api.github.com/";t.userProfile=function(e){if(e=n.initialize(e,["username","selector"],0)){var t=r+"users/"+e.username;n.getData(t,e,n.getUserProfileHTML)}else console.error("Parameters not passed correctly")},t.repoProfile=function(e){if(e=n.initialize(e,["username","selector","reponame"],0)){var t=r+"repos/"+e.username+"/"+e.reponame;n.getData(t,e,n.getRepoProfileHTML)}else console.error("Parameters not passed correctly")},t.orgProfile=function(e){if(e=n.initialize(e,["orgname","selector"],0)){var t=r+"orgs/"+e.orgname;n.getData(t,e,n.getOrgProfileHTML)}else console.error("Parameters not passed correctly")},t.userActivity=function(e){if(e=n.initialize(e,["username","selector"],1)){var t=r+"users/"+e.username,a=t+"/events";n.getData(t,e,n.getUserProfileHTML),n.getData(a,e,n.getPublicActivityHTML)}else console.error("Parameters not passed correctly")},t.onlyuserActivity=function(e){if(e=n.initialize(e,["username","selector"],1)){var t=r+"users/"+e.username,a=t+"/events";n.getData(a,e,n.getPublicActivityHTML)}else console.error("Parameters not passed correctly")},t.repoActivity=function(e){if(e=n.initialize(e,["username","selector","reponame"],1)){var t=r+"repos/"+e.username+"/"+e.reponame,a=t+"/events";n.getData(t,e,n.getRepoProfileHTML),n.getData(a,e,n.getPublicActivityHTML)}else console.error("Parameters not passed correctly")},t.orgActivity=function(e){if(e=n.initialize(e,["orgname","selector"],1)){var t=r+"orgs/"+e.orgname,a=t+"/events";n.getData(t,e,n.getOrgProfileHTML),n.getData(a,e,n.getPublicActivityHTML)}else console.error("Parameters not passed correctly")};var a={parentTpl:'<div class="gt-container"><%if(type){%><div class="gt-activity-cnt gt-scrollbar"><div class="gt-loading-txt">Loading..</div></div><%}%></div>',userProfileTpl:'<div class="gt-usr-avatar"><a target="_blank" href="<%= html_url%>"><div class="gt-usr-img" style="background-image: url(<%= avatar_url%>)"> </div></a></div><div class="gt-usr-name"><span class="user-name"><%= name%></span><a target="_blank" href="<%= html_url%>"><span class="user-login"><%= login%></span></a></div><div class="gt-usr-details"><div class="gt-usr-repo"><a target="_blank" href="<%= html_url%>"><span class="gt-usr-txt"><%= public_repos%></span><span class="gt-usr-dt">Repositories</span></a></div><div class="gt-usr-folwr"><a target="_blank" href="<%= html_url + "/followers"%>"><span class="gt-usr-txt"><%= followers%></span><span class="gt-usr-dt">Followers</span></a></div><div class="gt-usr-folng"><a target="_blank" href="<%= html_url + "/following"%>"><span class="gt-usr-txt"><%= following%></span><span class="gt-usr-dt">Following</span></a></div></div>',repoProfileTpl:'<div class="gt-usr-name"><span class="user-name"><%= name%></span><a target="_blank" href="<%= owner.html_url%>"><span class="user-login"><%= owner.login%></span></a><p><%= description%></p></div><div class="gt-repo-details"><div class="gt-usr-repo"><a target="_blank" href="<%= html_url%>"><span class="gt-usr-txt"><%= stargazers_count%></span><span class="gt-usr-dt">Stars</span></a></div><div class="gt-usr-folwr"><a target="_blank" href="<%= html_url %>"><span class="gt-usr-txt"><%= subscribers_count%></span><span class="gt-usr-dt">Watchers</span></a></div><div class="gt-usr-folng"><a target="_blank" href="<%= html_url %>"><span class="gt-usr-txt"><%= forks_count%></span><span class="gt-usr-dt">Forks</span></a></div><div class="gt-repo-lg-stat"></div></div>',orgProfileTpl:'<div class="gt-org-avatar"><a target="_blank" href="<%= html_url%>"><div class="gt-org-img" style="background-image: url(<%= avatar_url%>)"> </div></a></div><div class="gt-org-name"><span class="user-name"><%= name%></span><%if(blog){%><a target="_blank" href="<%= blog%>" class="gt-org-link"><span class="user-login">Website</span></a><%}%><%if(email){%><a target="_blank" href="mailto:<%= email%>" class="gt-org-link"><span class="user-login">Email</span></a><%}%><br><span class="gt-org-repos"><%= public_repos%></span><span class="gt-org-repos"> Public Repositories</span></div>',gitActivityTpl:'<div class="gt-activity <%=type%>"><div class="gt-avatar-cnt"><a target="_blank" href="https://github.com/<%= actor.login%>"><img src="<%=actor.avatar_url%>" class="gt-usr-avatar"></a></div><div class="gt-act-cnt"><div title="<%= created_at%>" class="gt-time-cnt"><div class="gt-time-str"><%= timeString%></div></div><%= userLink%><%= message%></div><div class="gt-clearfix"></div></div>',CommitCommentEvent:"<span> commented on commit <%= commentLink%> </span><p><%= payload.comment.body%></p>",CreateEvent:"<span> created <%= payload.ref_type%> <%= branchLink%> at <%= repoLink%> </span>",DeleteEvent:"<span> deleted <%= payload.ref%> <%= payload.ref_type%> at <%= repoLink%> </span>",ForkEvent:"<span> forked <%= repoLink%> to <%= forkLink%> </span>",GollumEvent:"<span> <%= actionType%> the <%= repoLink%> wiki</span><p><%= wikiMessage%></p>",IssueCommentEvent:"<span> commented on issue <%= commentLink%> </span><p><%= payload.comment.body%></p>",IssuesEvent:"<span> <%= payload.action%> issue <%= issueUrl%> </span>",MemberEvent:"<span> added <%= memberLink%> to <%= repoLink%> </span>",PublicEvent:"<span> open sourced <%= repoLink%> </span>",PullRequestEvent:'<span> <%= payload.action%> pull request <%= mergeRequestUrl%> </span><p><%= payload.pull_request.title%></p><p class="pull-req-info"><%= payload.pull_request.commits%><%if(payload.pull_request.commits > 1){%> commits <%}else{%> commit <%}%> with <%= payload.pull_request.changed_files%> <%if(payload.pull_request.commits > 1){%> files <%}else{%> file <%}%> changed.</p>',PullRequestReviewCommentEvent:"<span> commented on pull request <%= pullCommentUrl%> </span><p><%= payload.comment.body%></p>",PushEvent:"<span> pushed to <%= branchLink%> at <%= repoLink%> </span><%= commitsHtml%>",ReleaseEvent:"<span> released <%= tagLink%> at <%= repoLink%> </span><br><%= zipLink%>",WatchEvent:"<span> starred <%= repoLink%> </span>",noActivityTpl:'<div class="gt-no-activity"><span> There are no public events for this account in past 90 days. </span></div>',notFoundTpl:'<div class="gt-no-activity"><span> This account does not exist. </span></div>'},n={initialize:function(e,t,r){for(var s=0;s<t.length;s++)if(!e[t[s]])return!1;return n.renderContent(n.getRenderedHTML(a.parentTpl,{type:r}),e.selector),e.limit=n.setLimit(e.limit),e},checkInteger:function(e){return e===parseInt(e,10)?!0:!1},getRenderedHTML:function(t,r){return r?e.template(t)(r):e.template(t)()},getUserProfileHTML:function(e,t){n.renderContent(n.getRenderedHTML(a.userProfileTpl,e),t.selector,".gt-header")},getRepoProfileHTML:function(e,t){var s=r+"repos/"+t.username+"/"+t.reponame+"/languages";n.renderContent(n.getRenderedHTML(a.repoProfileTpl,e),t.selector,".gt-header"),n.getData(s,t,n.getLanguageHTML)},getOrgProfileHTML:function(e,t){n.renderContent(n.getRenderedHTML(a.orgProfileTpl,e),t.selector,".gt-header")},getPublicActivityHTML:function(e,t){var r="",s=t.limit<e.length?t.limit:e.length;if(0==s)r+=n.getRenderedHTML(a.noActivityTpl);else for(var i=0;s>i;i++){var o=e[i],l=o.payload;switch(o.timeString=n.millisecondsToStr(new Date-new Date(o.created_at)),o.userLink=n.getGitHubLink(o.actor.login,o.actor.login),o.repoLink=n.getGitHubLink(o.repo.name,o.repo.name),o.branchLink="",l.ref&&("refs/heads/"===l.ref.substring(0,11)?o.branch=l.ref.substring(11):o.branch=l.ref,o.branchLink=n.getGitHubLink(o.repo.name+"/tree/"+o.branch,o.branch)),o.type){case"CommitCommentEvent":o.commentLink=n.getLink(l.comment.html_url,o.repo.name+"@"+l.comment.commit_id.substring(0,6));break;case"CreateEvent":break;case"DeleteEvent":break;case"ForkEvent":o.forkLink=n.getGitHubLink(l.forkee.html_url,l.forkee.full_name);break;case"GollumEvent":var c=l.pages[0];o.actionType=c.action,o.wikiMessage=o.actionType.charAt(0).toUpperCase()+o.actionType.slice(1)+" ",o.wikiMessage+=n.getLink(c.html_url,c.title);break;case"IssueCommentEvent":o.commentLink=n.getLink(l.comment.html_url,o.repo.name+"#"+l.issue.number);break;case"IssuesEvent":o.issueUrl=n.getLink(l.issue.html_url,o.repo.name+"#"+l.issue.number);break;case"MemberEvent":o.memberLink=n.getGitHubLink(l.member.login,l.member.login);break;case"PublicEvent":break;case"PullRequestEvent":o.mergeRequestUrl=n.getLink(l.pull_request.html_url,o.repo.name+"#"+l.pull_request.number);break;case"PullRequestReviewCommentEvent":o.pullCommentUrl=n.getLink(l.comment.html_url,o.repo.name+"#"+l.pull_request.number);break;case"PushEvent":o.commitsHtml=n.getCommitsHTML(o);break;case"ReleaseEvent":o.tagLink=n.getLink(l.release.html_url,l.release.tag_name),o.zipLink=n.getLink(l.release.zipball_url,"Download Source Code (zip)");break;case"WatchEvent":}o.message=n.getRenderedHTML(a[o.type],o),r+=n.getRenderedHTML(a.gitActivityTpl,o)}n.renderContent(r,t.selector,".gt-activity-cnt")},getCommitsHTML:function(e){var t,r,a,s,i,o='<ul class="gt-commit-list">',l="",c=e.payload,u=c.commits.length,p=c.before+"..."+c.head;for(i=0;u>i&&!(i>1);i++)s=c.commits[i],t='<li class="gt-commit-item" >',r=n.getGitHubLink(e.repo.name+"/commit/"+s.sha,s.sha.substring(0,6)),a='<span class="gt-commit-msg">'+s.message.substring(0,150)+"</span>",t+=r,t+=a,t+="</li>",o+=t;return 2===u?l=n.getGitHubLink(e.repo.name+"/compare/"+p,"View comparison for these 2 commits &raquo;","gt-compare-link"):u>2&&(l=n.getGitHubLink(e.repo.name+"/compare/"+p,u-2+" more "+n.getPluralWord(u-2,"commit")+" &raquo;","gt-compare-link")),o+="</ul>",o+=l},getData:function(e,t,r){var s,i;i=new XMLHttpRequest,i.open("GET",e,!0),t.OAuth&&i.setRequestHeader("Authorization","Token "+t.OAuth),i.onload=function(e){i.status>=200&&i.status<400?(s=JSON.parse(i.responseText),r(s,t)):(n.renderContent(n.getRenderedHTML(a.notFoundTpl,s),t.selector,".gt-container"),console.error("An error occurred while connecting to GitHub API."))},i.onerror=function(e){console.error("An error occurred while connecting to GitHub API.")},i.send()},getLink:function(e,t,r){return t||(t=e),"undefined"==typeof r&&(r=""),n.getRenderedHTML('<a class="'+r+'" href="<%=url%>" target="_blank"><%=title%></a>',{url:e,title:t})},getGitHubLink:function(e,t,r){return t||(t=e),"undefined"==typeof r&&(r=""),n.getLink("https://github.com/"+e,t,r)},getPluralWord:function(e,t){return 1!==e?t+"s":t},getLanguageHTML:function(t,r){var a,s=[],i=0,o="";e.each(t,function(e,t){var r={};r.language=t,r.size=e,s.push(r),i+=e}),s=s.sort(function(e,t){return t.size-e.size}),e.each(s,function(e){a=(parseInt(e.size)/i*100).toFixed(1),o+='<div class="gt-repo-lg-cnt" style="width: '+a+"%; background: #"+n.getRandomColor()+'; " > <div class="gt-repo-lg-name" data-title="'+e.language+" ("+a+'%)"> </div> </div>'}),n.renderContent(o,r.selector,".gt-repo-lg-stat")},getRandomColor:function(){return Math.random().toString(16).substring(2,8)},millisecondsToStr:function(e){function t(e){return e>1?"s ago":" ago"}var r=Math.floor(e/1e3),a=Math.floor(r/31536e3);if(a)return a+" year"+t(a);var n=Math.floor((r%=31536e3)/2592e3);if(n)return n+" month"+t(n);var s=Math.floor((r%=2592e3)/86400);if(s)return s+" day"+t(s);var i=Math.floor((r%=86400)/3600);if(i)return"about "+i+" hour"+t(i);var o=Math.floor((r%=3600)/60);if(o)return o+" minute"+t(o);var l=r%60;return l?l+" second"+t(l):"just now"},renderContent:function(e,t,r){for(var a=document.querySelectorAll(t),n=0;n<a.length;n++)r?selectorDiv=a[n].querySelector(r):selectorDiv=a[n],selectorDiv.innerHTML=e},setLimit:function(e){var t;return t="undefined"!==e&&n.checkInteger(t=parseInt(e,10))?t>30?30:t:30}};return t});