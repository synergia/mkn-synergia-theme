// main.js //
// Wszystko wrzucamy tu

jQuery(function($) {

  $(document).ready(function bLazy_f() {
    var bLazy = new Blazy({
      offset: 20,
      selector: '.blazy',
      loadInvisible: false,
      success: function() {
        updateCounter();
      },
      error: function(ele, msg) {
        if (msg === 'missing') {
          // Data-src is missing
          console.error("bLazy: data-src is missing");
        } else if (msg === 'invalid') {
          // Data-src is invalid
          console.error("bLazy: data-src is invalid");
  
        }
      }
    });
    // not needed, only here to illustrate amount of loaded images
    var imageLoaded = 0;
    function updateCounter() {
      imageLoaded++;
      console.info("bLazy: Images loaded: %d", imageLoaded);
    }
  
    tabs(bLazy);
  });

  // Dropdown download button //
  // http://codepen.io/georgehastings/pen/vptdb
  $(".dropdown").on("click", function(event) {
    $(this).toggleClass("flip");
    event.stopPropagation();
    console.info("Dropdown-download opened");
  });
  $(document).on("click", function(event) {
    $(".dropdown").removeClass("flip");
  });

  /**
   * Dropy
   * http://codepen.io/Tombek/pen/OPvpLe
   */
  var dropy = {
    $dropys: null,
    openClass: 'open',
    selectClass: 'selected',
    init: function(){
      var self = this;
  
      self.$dropys = $('.dropy');
      self.eventHandler();
    },
    eventHandler: function(){
      var self = this;
  
      // Opening a dropy
      self.$dropys.find('.dropy__title').click(function(){
        self.$dropys.removeClass(self.openClass);
        $(this).parents('.dropy').addClass(self.openClass);
      });
  
      // Click on a dropy list
      self.$dropys.find('.dropy__content ul li a').click(function(){
        var $that = $(this);
        var $dropy = $that.parents('.dropy');
        var $input = $dropy.find('input');
        var $title = $(this).parents('.dropy').find('.dropy__title span');
  
        // Remove selected class
        $dropy.find('.dropy__content a').each(function(){
          $(this).removeClass(self.selectClass);
        });
  
        // Update selected value
        $title.html($that.html());
        $input.val($that.attr('data-value')).trigger('change');
  
        // If back to default, remove selected class else addclass on right element
        if($that.hasClass('dropy__header')){
          $title.removeClass(self.selectClass);
          $title.html($title.attr('data-title'));
        }
        else{
          $title.addClass(self.selectClass);
          $that.addClass(self.selectClass);
        }
  
        // Close dropdown
        $dropy.removeClass(self.openClass);
      });
  
      // Close all dropdown onclick on another element
      $(document).bind('click', function(e){
          if (! $(e.target).parents().hasClass('dropy')){ self.$dropys.removeClass(self.openClass); }
      });
    }
  };
  
  $(function(){
    dropy.init();
  });

    function acts() {
      var te;
      var min = $('.post-list-item-content h2').height();
      $('.post-list-item .post-list-item-content h2').each(function() {
        if ($(this).height() < min)
          min = $(this).height();
      });
  
      $('.post-list-item-content h2').each(function() {
        if ($(this).height() == min) {
          te = $(this).parent().parent().children('.excerpt');
          $(te).text(function(index, currentText) {
            if (currentText.substr(currentText.length - 3) != '&hellip;')
              return currentText.substr(0, 150) + '&hellip;';
          });
        } else if (($(this).height() < (min - 1) * 3) && ($(this).height() > min)) {
          te = $(this).parent().parent().children('.excerpt');
          $(te).text(function(index, currentText) {
            return currentText.substr(0, 80) + '&hellip;';
          });
        } else {
          te = $(this).parent().parent().children('.excerpt');
          $(this).text(function(index, currentText) {
            if ((currentText.substr(currentText.length - 3) != '&hellip;') && (currentText.length > 120))
              return currentText.substr(0, 120) + '&hellip;';
          });
          te.css("display", "none");
        }
      });
    }
    acts();
    $(window).resize(acts);
  
  
  $(".card .excerpt").text(function(index, currentText) {
    return currentText.substr(0, 140) + '&hellip;';
  });

  // Pakuje mniejsze obrazki bez podpisu w <figure> //
  // Jeśli obrazek ma tytuł, tym się zajmuje php funkcja w project-functions.php
  $('.project-content p').each(function(index) {
    var some_img = $(this).find('img');
    var width = some_img.width();
    if (width < 980) {
      some_img.wrap("<figure></figure>");
    }
  });

  //Skraca imiona, by nie wychodziły za bloki
  $('.co-author h3 a').each(function(index) {
    var length = $(this).html().length;
    if (length > 13) {
      var name = $(this).text();
      // console.log(name);
      var trimmed_name = name.charAt(0) + ". " + name.substr(name.indexOf(' ') + 1);
      // console.log(trimmed_name);
      $(this).text(trimmed_name);
    }
  });

  // Notyfikacje, powiadomienia //
  $(".note-close").click(function() {
    $(this).parent()
      .animate({
        opacity: 0
      }, 250, function() {
        $(this)
          .animate({
            marginBottom: 0
          }, 250)
          .children()
          .animate({
            padding: 0
          }, 250)
          .wrapInner("<div />")
          .children()
          .slideUp(250, function() {
            $(this).closest(".note").remove();
          });
      });
  });

  // Animacje dla banera rekrutacji //
  $('label.button').on('click', function() {
    $('.fb').addClass('animated fadeInUp');
    $('.date .icon-container').addClass('animated slideInLeft');
    $('.date span').addClass('animated slideInLeft');
    $('.location .icon-container').addClass('animated slideInRight');
    $('.location span').addClass('animated slideInRight');
  
  });
  $('#close_banner').on('click', function() {
    $('.fb').removeClass('animated fadeInUp');
    $('.date .icon-container').removeClass('animated slideInLeft');
    $('.date span').removeClass('animated slideInLeft');
    $('.location .icon-container').removeClass('animated slideInRight');
    $('.location span').removeClass('animated slideInRight');
  });
  
  // http://stackoverflow.com/questions/24070627/create-dropdown-banner-when-user-first-visits-website
  // Pozwalają otwierać baner tylko przy pierwszej wizycie
  
  // cookie-js

  
    $(function() {
      // Touch ripple effect on buttons
      $('.button:not(.button.disabled)').on('click',
  
        function(e) {
  
          /*!
          SVG version for ripple effect via Jonathan Cutrell (gently modified)
          http://webdesign.tutsplus.com/tutorials/recreating-the-touch-ripple-effect-as-seen-on-google-design--cms-21655
          */
  
          var x = e.pageX;
          var y = e.pageY;
          var clickY = y - $(this).offset().top;
          var clickX = x - $(this).offset().left;
          var box = this;
  
          var setX = parseInt(clickX);
          var setY = parseInt(clickY);
          var ripple = '<svg class="ink"><circle cx="' + setX + '" cy="' + setY + '" r="' + 0 + '"></circle></svg>';
  
          $(this).find('.ink').remove();
          $(this).append(ripple);
  
          var c = $(box).find('circle');
          c.animate({
            'r': $(box).outerWidth()
          }, {
            duration: 333,
            step: function(val) {
              c.attr('r', val);
            },
            complete: function() {
              c.fadeOut('fast');
            }
          });
  
          return true;
  
        });
  
    });

  // Pobieranie nicków z url i wyświetlanie ich koło ikon społecznościowych
  // oraz wykorzystanie username'u githuba do wyświetlenia ostatnie aktywności
  $('.userinfo a').each(function(index) {
    var profile = $(this).attr('href');
    var github_profile = profile.substr(19);
    if (profile.indexOf('github') > -1) {
      $('a[data-github]').append(github_profile);
      Github.onlyuserActivity({
        username: github_profile,
        selector: ".github",
        limit: 10
      });
    }
    if (profile.indexOf('twitter') > -1) {
      $('a[data-twitter]').append(profile.substr(20));
    }
    if (profile.indexOf('facebook') > -1) {
      $('a[data-facebook]').append(profile.substr(25));
    }
  });
  
  // Github.onlyuserActivity({
  //   username: "synergia",
  //   selector: ".github_s",
  //   limit: 5
  // });

  function tabs(bLazy) {
    // set active radio to address bar
    $(document).on('click', '.tabs .tabs-nav label', function() {
      var tab_nr = $(this).attr('for');
      var hash = '#' + tab_nr;
      window.history.replaceState('', '', hash);
      if(tab_nr === 'tab-1'){
        bLazy.load($('.tab:nth-of-type(1) .blazy'), true);
      } else if (tab_nr === 'tab-2') {
        bLazy.load($('.tab:nth-of-type(2) .blazy'), true);
      }else if (tab_nr === 'tab-3') {
        bLazy.load($('.tab:nth-of-type(3) .blazy'), true);
      }
  
    });
    // select active radio based on hash
    $(document.location.hash).prop('checked', true);
  }

  /* ========================================================================
   * Bootstrap: transition.js v3.3.6
   * http://getbootstrap.com/javascript/#transitions
   * ========================================================================
   * Copyright 2011-2015 Twitter, Inc.
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
   * ======================================================================== */
  
  
  +function ($) {
    'use strict';
  
    // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
    // ============================================================
  
    function transitionEnd() {
      var el = document.createElement('bootstrap')
  
      var transEndEventNames = {
        WebkitTransition : 'webkitTransitionEnd',
        MozTransition    : 'transitionend',
        OTransition      : 'oTransitionEnd otransitionend',
        transition       : 'transitionend'
      }
  
      for (var name in transEndEventNames) {
        if (el.style[name] !== undefined) {
          return { end: transEndEventNames[name] }
        }
      }
  
      return false // explicit for ie8 (  ._.)
    }
  
    // http://blog.alexmaccaw.com/css-transitions
    $.fn.emulateTransitionEnd = function (duration) {
      var called = false
      var $el = this
      $(this).one('bsTransitionEnd', function () { called = true })
      var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
      setTimeout(callback, duration)
      return this
    }
  
    $(function () {
      $.support.transition = transitionEnd()
  
      if (!$.support.transition) return
  
      $.event.special.bsTransitionEnd = {
        bindType: $.support.transition.end,
        delegateType: $.support.transition.end,
        handle: function (e) {
          if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
        }
      }
    })
  
  }(jQuery);

  $(document).ready(function(){
      $("#nav-mobile").html($("#nav-main").html());
      $("#nav-trigger .navicon-button").click(function(){
        console.info('Burger clicked');
          if ($("nav#nav-mobile ul").hasClass("expanded")) {
              $("nav#nav-mobile ul.expanded").removeClass("expanded").slideUp(250);
              $(this).removeClass("open");
          } else {
              $("nav#nav-mobile ul").addClass("expanded").slideDown(250);
              $(this).addClass("open");
          }
      });
  });

  $(document).ready(function() {
    Slider = $('#slider').Swipe({
      auto: 0,
      continuous: true,
    }).data('Swipe');
    if (Slider) {
      $('.next').on('click', Slider.next);
      $('.prev').on('click', Slider.prev);
    }
  });

  $(document).ready(function() {
  
      $('.blog-list-archive li ul').hide();
      $('.archive-list > li > h2').click(function(){
          $(this).parent().addClass('selected');
          $(this).parent().children('ul').slideDown(250);
          $(this).parent().siblings().children('ul').slideUp(250);
          $(this).parent().siblings().removeClass('selected');
      });
  });

  // Prezes zawsze na pierwszym miejscu //
  $('#management_board li#admin').insertBefore('#management_board li:eq(0)');
});
//# sourceMappingURL=data:application/json;base64,
